version: '3.7'

networks:
  #  docker network create --driver=bridge --internal=false --attachable main-gnet
  default:
    driver: bridge
    external:
      name: main-gnet

services:

  postgres:
    image: postgres:14.5
    container_name: server-postgres
    environment:
      POSTGRES_USER: main
      POSTGRES_PASSWORD: s50XgW4
      POSTGRES_DB: main
    volumes:
      - ./pgdata:/var/lib/postgresql/data
      - /home/ubuntu/pg_backups:/backups
    ports:
      - 5432:5432
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U main" ]
      interval: 10s
      timeout: 5s
      retries: 5
    command:
      - "postgres"
      - "-c"
      - "shared_preload_libraries=pg_stat_statements"
      - "-c"
      - "pg_stat_statements.track=all"
      - "-c"
      - "max_wal_size=64"

  pghero:
    image: ankane/pghero:latest
    restart: always
    environment:
      - DATABASE_URL=postgres://main:s50XgW4@postgres:5432/main
    depends_on:
      - postgres
    ports:
      - 2345:8080

  redis:
    image: redis:6
    container_name: spectrum-redis
    restart: always
    ports:
      - 6379:6379
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 5m
      timeout: 5s
      retries: 5

  rabbit:
    image: rabbitmq:3.8.17
    container_name: spectrum-rabbit
    environment:
      - RABBITMQ_DEFAULT_USER=main
      - RABBITMQ_DEFAULT_PASS==WHQ56DASU4H3xUL4AS4wsGMsWQp4
      - RABBITMQ_ERLANG_COOKIE=x8aLMP&jnrQR%*kd5+u
    healthcheck:
      test: rabbitmq-diagnostics -q ping
    ports:
      - '5672:5672'
      - '15672:15672'

  main: &main
    build:
      context: .
      args:
        INSTALL_DEV_REQUIREMENTS: "true"
    container_name: spectrum-main
    environment:
      - DJANGO_SETTINGS_MODULE=main.settings.local
      - WAITING_DATABASE=true
      - MIGRATE=true
      - DB_HOST=spectrum-postgres
      - DB_PORT=5432
    command: python manage.py runserver 0.0.0.0:80
    volumes:
      - .:/usr/src/app
    ports:
      - 4096:80
    depends_on:
      - postgres
      - rabbit

  main-tasks:
    <<: *main
    container_name: spectrum-tasks
    environment:
      - DJANGO_SETTINGS_MODULE=main.settings.local
      - WAITING_DATABASE=true
      - MIGRATE=false
      - DB_HOST=spectrum-postgres
      - DB_PORT=5432
    command: celery -A main worker -B -l info -n worker_celery
    healthcheck:
      test: celery inspect ping
    ports: [ ]
    depends_on:
      - postgres
      - rabbit
